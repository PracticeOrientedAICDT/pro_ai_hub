---
title: "Pro-AI Hub"
comments: false
echo: false
---

<script src="https://d3js.org/d3.v7.min.js"></script>

```{ojs}

// Nós
nodes = [
  {id: "Berenika Ewart-James"},
  {id: "Bezawit Tilaye"},
  {id: "David Fox"},
  {id: "Jack Woodcock"},
  {id: "Jake Chastney"},
  {id: "James Brock"},
  {id: "Jono Vincent"},
  {id: "Moses Guran"}
]

// Links com distâncias específicas
links = [
  {source: "Berenika Ewart-James", target: "Bezawit Tilaye", distance: 80},
  {source: "Berenika Ewart-James", target: "David Fox", distance: 120},
  {source: "Bezawit Tilaye", target: "Jack Woodcock", distance: 100},
  {source: "David Fox", target: "Jake Chastney", distance: 90},
  {source: "Jake Chastney", target: "James Brock", distance: 70},
  {source: "James Brock", target: "Jono Vincent", distance: 60},
  {source: "Jono Vincent", target: "Moses Guran", distance: 115},
  {source: "David Fox", target: "Moses Guran", distance: 130},
  {source: "Jack Woodcock", target: "Jake Chastney", distance: 85},
  {source: "Berenika Ewart-James", target: "James Brock", distance: 140}
]

// Simulação de forças com distância personalizada
simulation = d3.forceSimulation(nodes)
    .force("link", d3.forceLink(links)
        .id(d => d.id)
        .distance(d => d.distance)  // respeita a distância de cada link
        .strength(0.8)             // força maior mantém distâncias mais rígidas
    )
    .force("charge", d3.forceManyBody().strength(-200))
    .force("center", d3.forceCenter(400, 300))

// Renderização do grafo
svg = {
  const svg = d3.create("svg")
      .attr("width", 800)
      .attr("height", 600)

  const link = svg.append("g")
      .attr("stroke", "#999")
      .attr("stroke-opacity", 0.6)
    .selectAll("line")
    .data(links)
    .join("line")
      .attr("stroke-width", 2)

  const node = svg.append("g")
      .attr("stroke", "#fff")
      .attr("stroke-width", 1.5)
    .selectAll("circle")
    .data(nodes)
    .join("circle")
      .attr("r", 15)
      .attr("fill", "steelblue")

  const label = svg.append("g")
    .selectAll("text")
    .data(nodes)
    .join("text")
      .text(d => d.id)
      .attr("font-size", 12)
      .attr("dx", 18)
      .attr("dy", "0.35em")

  simulation.on("tick", () => {
    link
        .attr("x1", d => d.source.x)
        .attr("y1", d => d.source.y)
        .attr("x2", d => d.target.x)
        .attr("y2", d => d.target.y)

    node
        .attr("cx", d => d.x)
        .attr("cy", d => d.y)

    label
        .attr("x", d => d.x)
        .attr("y", d => d.y)
  })

  return svg.node()
}

```
